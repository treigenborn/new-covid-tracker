{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Table/CountryTable.jsx","api/index.js","App.js","index.js","components/Chart/Chart.module.css","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Table/CountryTable.module.css"],"names":["module","exports","Cards","data","cases","recovered","deaths","dataCountries","countryPicked","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","duration","separator","Date","toDateString","Chart","dataAll","chartData","country","active","flag","countryInfo","barChart","pieChart","labels","Math","round","toFixed","datasets","label","backgroundColor","options","legend","display","title","text","titleDiv","src","alt","CountryPicker","handleCountryChange","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","map","i","CountryTable","countriesArray","countryObj","name","totalCases","newCases","todayCases","totalDeaths","newDeaths","todayDeaths","totalRecovered","activeCases","criticalCases","critical","casesPerMillion","casesPerOneMillion","deathsPerMillion","deathsPerOneMillion","totalTests","tests","testsPerMillion","testsPerOneMillion","population","push","sort","a","b","Paper","TableContainer","table","Table","aria-label","TableHead","TableRow","field","TableCell","TableBody","url","fetchDataAll","axios","get","fetchDataCountries","countriesData","App","useState","setDataAll","setDataCountries","setCountryPicked","getDataAll","getDataCountries","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d414ac0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1CqVy\",\"card\":\"Cards_card__29gUG\",\"infected\":\"Cards_infected__khAdW\",\"recovered\":\"Cards_recovered__Laip6\",\"deaths\":\"Cards_deaths__2pQTT\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({\r\n  data: { cases, recovered, deaths },\r\n  dataCountries,\r\n  countryPicked,\r\n}) => {\r\n  console.log();\r\n  if (!cases) {\r\n    return 'Loading..';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography varaint='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={\r\n                  countryPicked\r\n                    ? dataCountries.data[countryPicked].cases\r\n                    : cases\r\n                }\r\n                duration={2.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date().toDateString()}\r\n            </Typography>\r\n            <Typography varaint='body2'>\r\n              Number of active cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography varaint='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={\r\n                  countryPicked\r\n                    ? dataCountries.data[countryPicked].recovered\r\n                    : recovered\r\n                }\r\n                duration={2.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date().toDateString()}\r\n            </Typography>\r\n            <Typography varaint='body2'>\r\n              Number of recovered cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography varaint='h5'>\r\n              <CountUp\r\n                start={0}\r\n                end={\r\n                  countryPicked\r\n                    ? dataCountries.data[countryPicked].deaths\r\n                    : deaths\r\n                }\r\n                duration={2.5}\r\n                separator=','\r\n              />\r\n            </Typography>\r\n            <Typography color='textSecondary'>\r\n              {new Date().toDateString()}\r\n            </Typography>\r\n            <Typography varaint='body2'>\r\n              Number of fatal cases of covid 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ dataAll, dataCountries, countryPicked }) => {\r\n  if (!dataCountries.data) {\r\n    return 'Loading...';\r\n  } else {\r\n    let chartData = countryPicked\r\n      ? {\r\n          country: dataCountries.data[countryPicked].country,\r\n          cases: dataCountries.data[countryPicked].cases,\r\n          deaths: dataCountries.data[countryPicked].deaths,\r\n          recovered: dataCountries.data[countryPicked].recovered,\r\n          active: dataCountries.data[countryPicked].active,\r\n          flag: dataCountries.data[countryPicked].countryInfo.flag,\r\n        }\r\n      : {\r\n          cases: dataAll.cases,\r\n          deaths: dataAll.deaths,\r\n          recovered: dataAll.recovered,\r\n          active: dataAll.active,\r\n        };\r\n\r\n    const barChart = dataCountries.data[0].cases ? (\r\n      <Pie\r\n        className={styles.pieChart}\r\n        data={{\r\n          labels: [\r\n            `Active Cases ${(\r\n              Math.round(((chartData.active * 100) / chartData.cases) * 100) /\r\n              100\r\n            ).toFixed(2)}%  `,\r\n            `Recovered ${(\r\n              Math.round(\r\n                ((chartData.recovered * 100) / chartData.cases) * 100\r\n              ) / 100\r\n            ).toFixed(2)}%  `,\r\n            `Deaths ${(\r\n              Math.round(((chartData.deaths * 100) / chartData.cases) * 100) /\r\n              100\r\n            ).toFixed(2)}%  `,\r\n          ],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: [\r\n                'rgba(0,0,255,0.5)',\r\n                'rgba(0,255,0,0.5)',\r\n                'rgba(255,0,0,0.5)',\r\n              ],\r\n              data: [chartData.active, chartData.recovered, chartData.deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: {\r\n            display: true,\r\n            text: `Current state in ${chartData.country}`,\r\n          },\r\n        }}\r\n      />\r\n    ) : null;\r\n    return (\r\n      <div className={styles.container}>\r\n        {countryPicked ? (\r\n          <div className={styles.titleDiv}>\r\n            <h1>{chartData.country}</h1>\r\n            <img src={chartData.flag} alt='country flag' />\r\n          </div>\r\n        ) : (\r\n          <div className={styles.titleDiv}>\r\n            <h1>World</h1>\r\n          </div>\r\n        )}\r\n        <div>{barChart}</div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport styles from './CountryPicker.module.css';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nconst CountryPicker = ({ dataCountries, dataAll, handleCountryChange }) => {\r\n  if (!dataCountries.data || !dataAll.cases) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div className={styles.container}>\r\n        <FormControl className={styles.formControl}>\r\n          <NativeSelect\r\n            defaultValue=''\r\n            onChange={(e) => {\r\n              handleCountryChange(e.target.value);\r\n            }}\r\n          >\r\n            <option value=''>Global</option>\r\n            {dataCountries.data.map((e, i) => {\r\n              return (\r\n                <option key={i} value={i}>\r\n                  {e.country}\r\n                </option>\r\n              );\r\n            })}\r\n          </NativeSelect>\r\n        </FormControl>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport styles from './CountryTable.module.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst CountryTable = ({ data }) => {\r\n  //LOADING\r\n  if (!data.data) {\r\n    return 'Loading...';\r\n  } else {\r\n    //CHART\r\n    let countriesArray = [];\r\n    data.data.map((country) => {\r\n      let countryObj = {\r\n        name: country.country,\r\n        totalCases: country.cases,\r\n        newCases: country.todayCases,\r\n        totalDeaths: country.deaths,\r\n        newDeaths: country.todayDeaths,\r\n        totalRecovered: country.recovered,\r\n        activeCases: country.active,\r\n        criticalCases: country.critical,\r\n        casesPerMillion: country.casesPerOneMillion,\r\n        deathsPerMillion: country.deathsPerOneMillion,\r\n        totalTests: country.tests,\r\n        testsPerMillion: country.testsPerOneMillion,\r\n        population: country.population,\r\n      };\r\n      countriesArray.push(countryObj);\r\n      return countriesArray;\r\n    });\r\n    const columns = [\r\n      { title: 'Country', field: 'name' },\r\n      { title: 'Total Cases', field: 'totalCases' },\r\n      { title: 'New Cases', field: 'newCases' },\r\n      { title: 'Total Deaths', field: 'totalDeaths' },\r\n      { title: 'New Deaths', field: 'newDeaths' },\r\n      { title: 'Total Recovered', field: 'totalRecovered' },\r\n      { title: 'Active Cases', field: 'activeCases' },\r\n      { title: 'Critical Cases', field: 'criticalCases' },\r\n      { title: 'Tot Cases / 1M pop', field: 'casesPerMillion' },\r\n      { title: 'Tot Deaths / 1M pop', field: 'deathsPerMillion' },\r\n      { title: 'Tests', field: 'totalTests' },\r\n      { title: 'Tests / 1M pop', field: 'testsPerMillion' },\r\n      { title: 'Population', field: 'population' },\r\n    ];\r\n\r\n    countriesArray = countriesArray.sort((a, b) => {\r\n      return b.totalCases - a.totalCases;\r\n    });\r\n    return (\r\n      <div className={styles.container}>\r\n        <Paper>\r\n          <TableContainer component={Paper} className={styles.table}>\r\n            <Table aria-label='covid-table'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((e) => {\r\n                    return <TableCell key={e.field}>{e.title}</TableCell>;\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {countriesArray.map((e, i) => {\r\n                  return (\r\n                    <TableRow key={i}>\r\n                      <TableCell key={e.name}>{e.name}</TableCell>\r\n                      <TableCell>{e.totalCases}</TableCell>\r\n                      <TableCell>{e.newCases}</TableCell>\r\n                      <TableCell>{e.totalDeaths}</TableCell>\r\n                      <TableCell>{e.newDeaths}</TableCell>\r\n                      <TableCell>{e.totalRecovered}</TableCell>\r\n                      <TableCell>{e.activeCases}</TableCell>\r\n                      <TableCell>{e.criticalCases}</TableCell>\r\n                      <TableCell>{e.casesPerMillion}</TableCell>\r\n                      <TableCell>{e.deathsPerMillion}</TableCell>\r\n                      <TableCell>{e.totalTests}</TableCell>\r\n                      <TableCell>{e.testsPerMillion}</TableCell>\r\n                      <TableCell>{e.population}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CountryTable;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://disease.sh/v3/covid-19';\r\n\r\nexport const fetchDataAll = async () => {\r\n  try {\r\n    const {\r\n      data: { cases, recovered, deaths, active },\r\n    } = await axios.get(`${url}/all`);\r\n    return { cases, recovered, deaths, active };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDataCountries = async () => {\r\n  try {\r\n    const countriesData = await axios.get(`${url}/countries`);\r\n    return countriesData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import styles from './App.module.css';\nimport React, { useEffect, useState } from 'react';\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport CountryTable from './components/Table/CountryTable';\nimport { fetchDataAll, fetchDataCountries } from './api';\n\nfunction App() {\n  const [dataAll, setDataAll] = useState({});\n  const [dataCountries, setDataCountries] = useState({});\n  const [countryPicked, setCountryPicked] = useState('');\n\n  const getDataAll = async () => {\n    const dataAll = await fetchDataAll();\n    setDataAll(dataAll);\n  };\n  const getDataCountries = async () => {\n    const dataCountries = await fetchDataCountries();\n    setDataCountries(dataCountries);\n  };\n  useEffect(() => {\n    getDataAll();\n    getDataCountries();\n  }, []);\n\n  const handleCountryChange = async (country) => {\n    const countryPicked = await country;\n    setCountryPicked(countryPicked);\n  };\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Current World data of covid-19</h1>\n      <Cards\n        data={dataAll}\n        dataCountries={dataCountries}\n        countryPicked={countryPicked}\n      />\n      <CountryPicker\n        dataCountries={dataCountries}\n        dataAll={dataAll}\n        handleCountryChange={handleCountryChange}\n      />\n      <Chart\n        dataAll={dataAll}\n        dataCountries={dataCountries}\n        countryPicked={countryPicked}\n      />\n      <CountryTable data={dataCountries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__49uQe\",\"titleDiv\":\"Chart_titleDiv__2aInj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Zzrg\",\"title\":\"App_title__37mrq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2QxV5\",\"formControl\":\"CountryPicker_formControl__2n3Ct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryTable_container__3xE1O\"};"],"sourceRoot":""}